@use 'sass:math'

$ease-in-out-cubic: cubic-bezier(0.65, 0, 0.35, 1)
$ease-in-out-quint: cubic-bezier(0.22, 1, 0.36, 1)
$ease-in-out-circ: cubic-bezier(0.79,0.14,0.15,0.86)
$ease-out-back: cubic-bezier(0.34, 1.56, 0.64, 1)
$ease-in-out-circ: cubic-bezier(0.85, 0, 0.15, 1)

=default
  animation-duration: 500ms
  animation-timing-function: $ease-in-out-cubic
  animation-iteration-count: 1
  animation-fill-mode: forwards
  animation-direction: normal

=arrow
  animation-duration: 1000ms
  animation-name: arrow
  animation-timing-function: $ease-in-out-circ
  animation-iteration-count: 1
  animation-fill-mode: forwards
  animation-direction: normal

=zoom
  animation-duration: 1000ms
  animation-name: zoom
  animation-timing-function: $ease-in-out-circ
  animation-iteration-count: 1
  animation-fill-mode: both
  animation-direction: normal

=zoom-ready
  transform: scale(1)
  transition: transform 1000ms $ease-in-out-circ
  will-change: transform

=zoom-trigger
  transform: scale(1.1)
  transition: transform 1000ms $ease-in-out-circ

=fade-up
  +fade-up-ready
  animation-duration: 500ms
  animation-name: fade-up
  animation-timing-function: $ease-in-out-cubic
  animation-iteration-count: 1
  animation-fill-mode: forwards
  animation-direction: normal

=fade-in
  opacity: 1

=fade-in-ready
  opacity: 0

=fade-in-trigger
  +default
  animation-name: fade-in

@keyframes fade-in
  0%
    +fade-in-ready
  100%
    +fade-in

=fade-out
  opacity: 0

=fade-up-ready
  opacity: 0
  transform: translate3d(0, 35px, 0)

=fade-up-finish
  opacity: 1
  transform: translate3d(0, 0, 0)

=fade-out-ready
  opacity: 1

=fade-out-trigger
  +default
  animation-name: fade-out

@keyframes fade-out
  0%
    +fade-out-ready
  100%
    +fade-out

@keyframes arrow
  0%
    transform: translate3d(0, 0, 0)
  50%
    transform: translate3d(20px, 0, 0)
  100%
    transform: translate3d(0, 0, 0)

@keyframes zoom
  0%
    transform: scale(1)
  100%
    transform: scale(1.1)

@keyframes fade-up
  0%
    +fade-up-ready
  100%
    +fade-up-finish

=fadeUpSet($class, $start, $end, $modifier)
  @for $i from $start through $end
    #{$class}
      &:nth-child(#{$i})
        animation-delay: ($i * math.div(1s, $end)) + $modifier 

=fadeUpCardItem($class1, $class2, $start, $end, $modifier)
  @for $i from $start through $end
    #{$class1}--#{$i}
      #{$class2}
        animation-delay: ($i * math.div(1s, $end)) + $modifier 

=fadeUpCards($class, $start, $end)
  @for $i from $start through $end
    #{$class}--#{$i}
        animation-delay: ($i * math.div(1s, $end))
